<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx.xsd  
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd ">

	<!-- scan the package and the sub package -->
	<context:component-scan base-package="org.lanqiao.*" />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	<!-- 声明dataSourceBean -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- 请在下面的文件夹中加入自己的dao和service配置 -->
	<import resource="org/lanqiao/context/*.xml"/>
	<!-- 定义通知 transaction-manager指向事务管理的Bean -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 事务参数 -->
		<tx:attributes>
			<!-- name表示事务相关的方法；isolation表示事务的传播性或者隔离级别，默认default； rollback-for回滚的要求 -->
			<!-- 管理员的登录 -->
			<tx:method name="managerLogin" isolation="DEFAULT" read-only="true" />
			<tx:method name="loginRegister" isolation="DEFAULT" read-only="true"/>
			<tx:method name="search*" isolation="DEFAULT" read-only="true" />
			<!-- 所有的获取方法 -->
			<tx:method name="select*" isolation="DEFAULT" read-only="true" />
			<!-- 所有的增加方法 -->
			<tx:method name="add*" isolation="DEFAULT" rollback-for="java.lang.Exception" />
			<!-- 所有的删除方法 -->
			<tx:method name="delete*" isolation="DEFAULT" rollback-for="java.lang.Exception" />
			<!-- 所有的修改方法 -->
			<tx:method name="update*" isolation="DEFAULT" rollback-for="java.lang.Exception" />
			<!-- 所有的查询方法 -->
					
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut expression="execution(* org.lanqiao.service.*.*(..) )"
			id="pointcut" />
		<!-- 整合通知和切点 advice-ref指向通知的id，pointcut指向切点 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
</beans>